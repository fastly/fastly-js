/**
 * Healthcheck
 * Healthchecks are used to customize the way Fastly checks on your Backends. If an origin server is marked unhealthy due to health checks, Fastly will stop attempting to send requests to it. If all origin servers are marked unhealthy, Fastly will attempt to serve stale. If no stale object is available, a 503 will be returned to the client.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Healthcheck);
  }
}(this, function(expect, Healthcheck) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Healthcheck.ServicesHealthcheckApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServicesHealthcheckApi', function() {
    describe('createHealthcheck', function() {
      it('should call createHealthcheck successfully', function(done) {
        //uncomment below and update the code to test createHealthcheck
        //instance.createHealthcheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteHealthcheck', function() {
      it('should call deleteHealthcheck successfully', function(done) {
        //uncomment below and update the code to test deleteHealthcheck
        //instance.deleteHealthcheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHealthcheck', function() {
      it('should call getHealthcheck successfully', function(done) {
        //uncomment below and update the code to test getHealthcheck
        //instance.getHealthcheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listHealthchecks', function() {
      it('should call listHealthchecks successfully', function(done) {
        //uncomment below and update the code to test listHealthchecks
        //instance.listHealthchecks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateHealthcheck', function() {
      it('should call updateHealthcheck successfully', function(done) {
        //uncomment below and update the code to test updateHealthcheck
        //instance.updateHealthcheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
