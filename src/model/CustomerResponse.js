/**
 * Fastly API
 * Via the Fastly API you can perform any of the operations that are possible within the management console,  including creating services, domains, and backends, configuring rules or uploading your own application code, as well as account operations such as user administration and billing reports. The API is organized into collections of endpoints that allow manipulation of objects related to Fastly services and accounts. For the most accurate and up-to-date API reference content, visit our [Developer Hub](https://developer.fastly.com/reference/api/) 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Customer from './Customer';
import CustomerResponseAllOf from './CustomerResponseAllOf';
import Timestamps from './Timestamps';


class CustomerResponse {
    
    constructor() { 
        Customer.initialize(this);Timestamps.initialize(this);CustomerResponseAllOf.initialize(this);
        CustomerResponse.initialize(this);
    }

    
    static initialize(obj) { 
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerResponse();
            Customer.constructFromObject(data, obj);
            Timestamps.constructFromObject(data, obj);
            CustomerResponseAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('billing_contact_id')) {
                obj['billing_contact_id'] = ApiClient.convertToType(data['billing_contact_id'], 'String');
            }
            if (data.hasOwnProperty('billing_network_type')) {
                obj['billing_network_type'] = ApiClient.convertToType(data['billing_network_type'], 'String');
            }
            if (data.hasOwnProperty('billing_ref')) {
                obj['billing_ref'] = ApiClient.convertToType(data['billing_ref'], 'String');
            }
            if (data.hasOwnProperty('can_configure_wordpress')) {
                obj['can_configure_wordpress'] = ApiClient.convertToType(data['can_configure_wordpress'], 'Boolean');
            }
            if (data.hasOwnProperty('can_reset_passwords')) {
                obj['can_reset_passwords'] = ApiClient.convertToType(data['can_reset_passwords'], 'Boolean');
            }
            if (data.hasOwnProperty('can_upload_vcl')) {
                obj['can_upload_vcl'] = ApiClient.convertToType(data['can_upload_vcl'], 'Boolean');
            }
            if (data.hasOwnProperty('force_2fa')) {
                obj['force_2fa'] = ApiClient.convertToType(data['force_2fa'], 'Boolean');
            }
            if (data.hasOwnProperty('force_sso')) {
                obj['force_sso'] = ApiClient.convertToType(data['force_sso'], 'Boolean');
            }
            if (data.hasOwnProperty('has_account_panel')) {
                obj['has_account_panel'] = ApiClient.convertToType(data['has_account_panel'], 'Boolean');
            }
            if (data.hasOwnProperty('has_improved_events')) {
                obj['has_improved_events'] = ApiClient.convertToType(data['has_improved_events'], 'Boolean');
            }
            if (data.hasOwnProperty('has_improved_ssl_config')) {
                obj['has_improved_ssl_config'] = ApiClient.convertToType(data['has_improved_ssl_config'], 'Boolean');
            }
            if (data.hasOwnProperty('has_openstack_logging')) {
                obj['has_openstack_logging'] = ApiClient.convertToType(data['has_openstack_logging'], 'Boolean');
            }
            if (data.hasOwnProperty('has_pci')) {
                obj['has_pci'] = ApiClient.convertToType(data['has_pci'], 'Boolean');
            }
            if (data.hasOwnProperty('has_pci_passwords')) {
                obj['has_pci_passwords'] = ApiClient.convertToType(data['has_pci_passwords'], 'Boolean');
            }
            if (data.hasOwnProperty('ip_whitelist')) {
                obj['ip_whitelist'] = ApiClient.convertToType(data['ip_whitelist'], 'String');
            }
            if (data.hasOwnProperty('legal_contact_id')) {
                obj['legal_contact_id'] = ApiClient.convertToType(data['legal_contact_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('postal_address')) {
                obj['postal_address'] = ApiClient.convertToType(data['postal_address'], 'String');
            }
            if (data.hasOwnProperty('pricing_plan')) {
                obj['pricing_plan'] = ApiClient.convertToType(data['pricing_plan'], 'String');
            }
            if (data.hasOwnProperty('pricing_plan_id')) {
                obj['pricing_plan_id'] = ApiClient.convertToType(data['pricing_plan_id'], 'String');
            }
            if (data.hasOwnProperty('security_contact_id')) {
                obj['security_contact_id'] = ApiClient.convertToType(data['security_contact_id'], 'String');
            }
            if (data.hasOwnProperty('technical_contact_id')) {
                obj['technical_contact_id'] = ApiClient.convertToType(data['technical_contact_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }


}


CustomerResponse.prototype['billing_contact_id'] = undefined;


CustomerResponse.prototype['billing_network_type'] = undefined;


CustomerResponse.prototype['billing_ref'] = undefined;


CustomerResponse.prototype['can_configure_wordpress'] = undefined;


CustomerResponse.prototype['can_reset_passwords'] = undefined;


CustomerResponse.prototype['can_upload_vcl'] = undefined;


CustomerResponse.prototype['force_2fa'] = undefined;


CustomerResponse.prototype['force_sso'] = undefined;


CustomerResponse.prototype['has_account_panel'] = undefined;


CustomerResponse.prototype['has_improved_events'] = undefined;


CustomerResponse.prototype['has_improved_ssl_config'] = undefined;


CustomerResponse.prototype['has_openstack_logging'] = undefined;


CustomerResponse.prototype['has_pci'] = undefined;


CustomerResponse.prototype['has_pci_passwords'] = undefined;


CustomerResponse.prototype['ip_whitelist'] = undefined;


CustomerResponse.prototype['legal_contact_id'] = undefined;


CustomerResponse.prototype['name'] = undefined;


CustomerResponse.prototype['owner_id'] = undefined;


CustomerResponse.prototype['phone_number'] = undefined;


CustomerResponse.prototype['postal_address'] = undefined;


CustomerResponse.prototype['pricing_plan'] = undefined;


CustomerResponse.prototype['pricing_plan_id'] = undefined;


CustomerResponse.prototype['security_contact_id'] = undefined;


CustomerResponse.prototype['technical_contact_id'] = undefined;


CustomerResponse.prototype['created_at'] = undefined;


CustomerResponse.prototype['deleted_at'] = undefined;


CustomerResponse.prototype['updated_at'] = undefined;


CustomerResponse.prototype['id'] = undefined;


// Implement Customer interface:

Customer.prototype['billing_contact_id'] = undefined;

Customer.prototype['billing_network_type'] = undefined;

Customer.prototype['billing_ref'] = undefined;

Customer.prototype['can_configure_wordpress'] = undefined;

Customer.prototype['can_reset_passwords'] = undefined;

Customer.prototype['can_upload_vcl'] = undefined;

Customer.prototype['force_2fa'] = undefined;

Customer.prototype['force_sso'] = undefined;

Customer.prototype['has_account_panel'] = undefined;

Customer.prototype['has_improved_events'] = undefined;

Customer.prototype['has_improved_ssl_config'] = undefined;

Customer.prototype['has_openstack_logging'] = undefined;

Customer.prototype['has_pci'] = undefined;

Customer.prototype['has_pci_passwords'] = undefined;

Customer.prototype['ip_whitelist'] = undefined;

Customer.prototype['legal_contact_id'] = undefined;

Customer.prototype['name'] = undefined;

Customer.prototype['owner_id'] = undefined;

Customer.prototype['phone_number'] = undefined;

Customer.prototype['postal_address'] = undefined;

Customer.prototype['pricing_plan'] = undefined;

Customer.prototype['pricing_plan_id'] = undefined;

Customer.prototype['security_contact_id'] = undefined;

Customer.prototype['technical_contact_id'] = undefined;
// Implement Timestamps interface:

Timestamps.prototype['created_at'] = undefined;

Timestamps.prototype['deleted_at'] = undefined;

Timestamps.prototype['updated_at'] = undefined;
// Implement CustomerResponseAllOf interface:

CustomerResponseAllOf.prototype['id'] = undefined;




CustomerResponse['BillingNetworkTypeEnum'] = {

    
    "public": "public",

    
    "private": "private"
};



export default CustomerResponse;

