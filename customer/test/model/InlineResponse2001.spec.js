/**
 * Customer
 * A Customer is the base object that owns your Users and Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Customer);
  }
}(this, function(expect, Customer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Customer.InlineResponse2001();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse2001', function() {
    it('should create an instance of InlineResponse2001', function() {
      // uncomment below and update the code to test InlineResponse2001
      //var instane = new Customer.InlineResponse2001();
      //expect(instance).to.be.a(Customer.InlineResponse2001);
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property deletedAt (base name: "deleted_at")', function() {
      // uncomment below and update the code to test the property deletedAt
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property billingContactId (base name: "billing_contact_id")', function() {
      // uncomment below and update the code to test the property billingContactId
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property billingNetworkType (base name: "billing_network_type")', function() {
      // uncomment below and update the code to test the property billingNetworkType
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property billingRef (base name: "billing_ref")', function() {
      // uncomment below and update the code to test the property billingRef
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property canConfigureWordpress (base name: "can_configure_wordpress")', function() {
      // uncomment below and update the code to test the property canConfigureWordpress
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property canResetPasswords (base name: "can_reset_passwords")', function() {
      // uncomment below and update the code to test the property canResetPasswords
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property canUploadVcl (base name: "can_upload_vcl")', function() {
      // uncomment below and update the code to test the property canUploadVcl
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property force2fa (base name: "force_2fa")', function() {
      // uncomment below and update the code to test the property force2fa
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property forceSso (base name: "force_sso")', function() {
      // uncomment below and update the code to test the property forceSso
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property hasAccountPanel (base name: "has_account_panel")', function() {
      // uncomment below and update the code to test the property hasAccountPanel
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property hasImprovedEvents (base name: "has_improved_events")', function() {
      // uncomment below and update the code to test the property hasImprovedEvents
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property hasImprovedSslConfig (base name: "has_improved_ssl_config")', function() {
      // uncomment below and update the code to test the property hasImprovedSslConfig
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property hasOpenstackLogging (base name: "has_openstack_logging")', function() {
      // uncomment below and update the code to test the property hasOpenstackLogging
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property hasPci (base name: "has_pci")', function() {
      // uncomment below and update the code to test the property hasPci
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property hasPciPasswords (base name: "has_pci_passwords")', function() {
      // uncomment below and update the code to test the property hasPciPasswords
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property ipWhitelist (base name: "ip_whitelist")', function() {
      // uncomment below and update the code to test the property ipWhitelist
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property legalContactId (base name: "legal_contact_id")', function() {
      // uncomment below and update the code to test the property legalContactId
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "owner_id")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property postalAddress (base name: "postal_address")', function() {
      // uncomment below and update the code to test the property postalAddress
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property pricingPlan (base name: "pricing_plan")', function() {
      // uncomment below and update the code to test the property pricingPlan
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property pricingPlanId (base name: "pricing_plan_id")', function() {
      // uncomment below and update the code to test the property pricingPlanId
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property securityContactId (base name: "security_contact_id")', function() {
      // uncomment below and update the code to test the property securityContactId
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

    it('should have the property technicalContactId (base name: "technical_contact_id")', function() {
      // uncomment below and update the code to test the property technicalContactId
      //var instance = new Customer.InlineResponse2001();
      //expect(instance).to.be();
    });

  });

}));
