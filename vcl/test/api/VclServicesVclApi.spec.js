/**
 * VCL
 * A VCL is a Varnish configuration file used to customize the configuration for a Service.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Vcl);
  }
}(this, function(expect, Vcl) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Vcl.VclServicesVclApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VclServicesVclApi', function() {
    describe('createCustomVcl', function() {
      it('should call createCustomVcl successfully', function(done) {
        //uncomment below and update the code to test createCustomVcl
        //instance.createCustomVcl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCustomVcl', function() {
      it('should call deleteCustomVcl successfully', function(done) {
        //uncomment below and update the code to test deleteCustomVcl
        //instance.deleteCustomVcl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomVcl', function() {
      it('should call getCustomVcl successfully', function(done) {
        //uncomment below and update the code to test getCustomVcl
        //instance.getCustomVcl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomVclBoilerplate', function() {
      it('should call getCustomVclBoilerplate successfully', function(done) {
        //uncomment below and update the code to test getCustomVclBoilerplate
        //instance.getCustomVclBoilerplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomVclGenerated', function() {
      it('should call getCustomVclGenerated successfully', function(done) {
        //uncomment below and update the code to test getCustomVclGenerated
        //instance.getCustomVclGenerated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomVclGeneratedHighlighted', function() {
      it('should call getCustomVclGeneratedHighlighted successfully', function(done) {
        //uncomment below and update the code to test getCustomVclGeneratedHighlighted
        //instance.getCustomVclGeneratedHighlighted(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomVclHighlighted', function() {
      it('should call getCustomVclHighlighted successfully', function(done) {
        //uncomment below and update the code to test getCustomVclHighlighted
        //instance.getCustomVclHighlighted(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomVclRaw', function() {
      it('should call getCustomVclRaw successfully', function(done) {
        //uncomment below and update the code to test getCustomVclRaw
        //instance.getCustomVclRaw(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCustomVcl', function() {
      it('should call listCustomVcl successfully', function(done) {
        //uncomment below and update the code to test listCustomVcl
        //instance.listCustomVcl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setCustomVclMain', function() {
      it('should call setCustomVclMain successfully', function(done) {
        //uncomment below and update the code to test setCustomVclMain
        //instance.setCustomVclMain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomVcl', function() {
      it('should call updateCustomVcl successfully', function(done) {
        //uncomment below and update the code to test updateCustomVcl
        //instance.updateCustomVcl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
