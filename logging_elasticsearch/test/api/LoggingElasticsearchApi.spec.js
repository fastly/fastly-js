/**
 * Elasticsearch
 * Fastly will upload log messages periodically to the server in the format specified in the Elasticsearch object.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Elasticsearch);
  }
}(this, function(expect, Elasticsearch) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Elasticsearch.LoggingElasticsearchApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LoggingElasticsearchApi', function() {
    describe('createLogElasticsearch', function() {
      it('should call createLogElasticsearch successfully', function(done) {
        //uncomment below and update the code to test createLogElasticsearch
        //instance.createLogElasticsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLogElasticsearch', function() {
      it('should call deleteLogElasticsearch successfully', function(done) {
        //uncomment below and update the code to test deleteLogElasticsearch
        //instance.deleteLogElasticsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLogElasticsearch', function() {
      it('should call getLogElasticsearch successfully', function(done) {
        //uncomment below and update the code to test getLogElasticsearch
        //instance.getLogElasticsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLogElasticsearch', function() {
      it('should call listLogElasticsearch successfully', function(done) {
        //uncomment below and update the code to test listLogElasticsearch
        //instance.listLogElasticsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLogElasticsearch', function() {
      it('should call updateLogElasticsearch successfully', function(done) {
        //uncomment below and update the code to test updateLogElasticsearch
        //instance.updateLogElasticsearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
