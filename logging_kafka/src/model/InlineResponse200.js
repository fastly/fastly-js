/**
 * Kafka
 * Fastly will upload log messages periodically to the server in the format specified in the Kafka object.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';


class InlineResponse200 {
    
    constructor() { 
        
        InlineResponse200.initialize(this);
    }

    
    static initialize(obj) { 
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('service_id')) {
                obj['service_id'] = ApiClient.convertToType(data['service_id'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('placement')) {
                obj['placement'] = ApiClient.convertToType(data['placement'], 'String');
            }
            if (data.hasOwnProperty('format_version')) {
                obj['format_version'] = ApiClient.convertToType(data['format_version'], 'Number');
            }
            if (data.hasOwnProperty('response_condition')) {
                obj['response_condition'] = ApiClient.convertToType(data['response_condition'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('tls_ca_cert')) {
                obj['tls_ca_cert'] = ApiClient.convertToType(data['tls_ca_cert'], 'String');
            }
            if (data.hasOwnProperty('tls_client_cert')) {
                obj['tls_client_cert'] = ApiClient.convertToType(data['tls_client_cert'], 'String');
            }
            if (data.hasOwnProperty('tls_client_key')) {
                obj['tls_client_key'] = ApiClient.convertToType(data['tls_client_key'], 'String');
            }
            if (data.hasOwnProperty('tls_hostname')) {
                obj['tls_hostname'] = ApiClient.convertToType(data['tls_hostname'], 'String');
            }
            if (data.hasOwnProperty('topic')) {
                obj['topic'] = ApiClient.convertToType(data['topic'], 'String');
            }
            if (data.hasOwnProperty('brokers')) {
                obj['brokers'] = ApiClient.convertToType(data['brokers'], 'String');
            }
            if (data.hasOwnProperty('compression_codec')) {
                obj['compression_codec'] = ApiClient.convertToType(data['compression_codec'], 'String');
            }
            if (data.hasOwnProperty('required_acks')) {
                obj['required_acks'] = ApiClient.convertToType(data['required_acks'], 'Number');
            }
            if (data.hasOwnProperty('request_max_bytes')) {
                obj['request_max_bytes'] = ApiClient.convertToType(data['request_max_bytes'], 'Number');
            }
            if (data.hasOwnProperty('parse_log_keyvals')) {
                obj['parse_log_keyvals'] = ApiClient.convertToType(data['parse_log_keyvals'], 'Boolean');
            }
            if (data.hasOwnProperty('auth_method')) {
                obj['auth_method'] = ApiClient.convertToType(data['auth_method'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('use_tls')) {
                obj['use_tls'] = ApiClient.convertToType(data['use_tls'], 'Number');
            }
        }
        return obj;
    }


}


InlineResponse200.prototype['created_at'] = undefined;


InlineResponse200.prototype['deleted_at'] = undefined;


InlineResponse200.prototype['updated_at'] = undefined;


InlineResponse200.prototype['service_id'] = undefined;


InlineResponse200.prototype['version'] = undefined;


InlineResponse200.prototype['name'] = undefined;


InlineResponse200.prototype['placement'] = undefined;


InlineResponse200.prototype['format_version'] = FormatVersionEnum.2;


InlineResponse200.prototype['response_condition'] = undefined;


InlineResponse200.prototype['format'] = '%h %l %u %t "%r" %&gt;s %b';


InlineResponse200.prototype['tls_ca_cert'] = 'null';


InlineResponse200.prototype['tls_client_cert'] = 'null';


InlineResponse200.prototype['tls_client_key'] = 'null';


InlineResponse200.prototype['tls_hostname'] = 'null';


InlineResponse200.prototype['topic'] = undefined;


InlineResponse200.prototype['brokers'] = undefined;


InlineResponse200.prototype['compression_codec'] = undefined;


InlineResponse200.prototype['required_acks'] = RequiredAcksEnum.1;


InlineResponse200.prototype['request_max_bytes'] = 0;


InlineResponse200.prototype['parse_log_keyvals'] = undefined;


InlineResponse200.prototype['auth_method'] = undefined;


InlineResponse200.prototype['user'] = undefined;


InlineResponse200.prototype['password'] = undefined;


InlineResponse200.prototype['use_tls'] = UseTlsEnum.0;






InlineResponse200['PlacementEnum'] = {

    
    "none": "none",

    
    "waf_debug": "waf_debug",

    
    "null": "null"
};



InlineResponse200['FormatVersionEnum'] = {

    
    "1": 1,

    
    "2": 2
};



InlineResponse200['CompressionCodecEnum'] = {

    
    "gzip": "gzip",

    
    "snappy": "snappy",

    
    "lz4": "lz4",

    
    "null": "null"
};



InlineResponse200['RequiredAcksEnum'] = {

    
    "1": 1,

    
    "0": 0,

    
    "-1": -1
};



InlineResponse200['AuthMethodEnum'] = {

    
    "plain": "plain",

    
    "scram-sha-256": "scram-sha-256",

    
    "scram-sha-512": "scram-sha-512"
};



InlineResponse200['UseTlsEnum'] = {

    
    "0": 0,

    
    "1": 1
};



export default InlineResponse200;

