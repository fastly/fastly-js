/**
 * Rate Limiter
 * Rate limiters add configurable origin request rate limiting to a service. Use of this feature is by invite only and subject to the terms set forth in the invitation you were emailed. To create a rate limiting policy, you must have a [paid account with a contract](https://docs.fastly.com/en/guides/accounts-and-pricing-plans#paid-accounts-with-contractual-commitments) for Fastlyâ€™s services.
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceServiceIdVersionVersionIdRateLimitersResponse from './ServiceServiceIdVersionVersionIdRateLimitersResponse';


class ModelRateLimiter {
    
    constructor(name, httpMethods, rpsLimit, windowSize, clientKey, penaltyBoxDuration, action) { 
        
        ModelRateLimiter.initialize(this, name, httpMethods, rpsLimit, windowSize, clientKey, penaltyBoxDuration, action);
    }

    
    static initialize(obj, name, httpMethods, rpsLimit, windowSize, clientKey, penaltyBoxDuration, action) { 
        obj['name'] = name;
        obj['http_methods'] = httpMethods;
        obj['rps_limit'] = rpsLimit;
        obj['window_size'] = windowSize;
        obj['client_key'] = clientKey;
        obj['penalty_box_duration'] = penaltyBoxDuration;
        obj['action'] = action;
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelRateLimiter();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('http_methods')) {
                obj['http_methods'] = ApiClient.convertToType(data['http_methods'], ['String']);
            }
            if (data.hasOwnProperty('rps_limit')) {
                obj['rps_limit'] = ApiClient.convertToType(data['rps_limit'], 'Number');
            }
            if (data.hasOwnProperty('window_size')) {
                obj['window_size'] = ApiClient.convertToType(data['window_size'], 'Number');
            }
            if (data.hasOwnProperty('client_key')) {
                obj['client_key'] = ApiClient.convertToType(data['client_key'], ['String']);
            }
            if (data.hasOwnProperty('penalty_box_duration')) {
                obj['penalty_box_duration'] = ApiClient.convertToType(data['penalty_box_duration'], 'Number');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('service_id')) {
                obj['service_id'] = ApiClient.convertToType(data['service_id'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('uri_dictionary_name')) {
                obj['uri_dictionary_name'] = ApiClient.convertToType(data['uri_dictionary_name'], 'String');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = ServiceServiceIdVersionVersionIdRateLimitersResponse.constructFromObject(data['response']);
            }
            if (data.hasOwnProperty('response_object_name')) {
                obj['response_object_name'] = ApiClient.convertToType(data['response_object_name'], 'String');
            }
            if (data.hasOwnProperty('logger_type')) {
                obj['logger_type'] = ApiClient.convertToType(data['logger_type'], 'String');
            }
            if (data.hasOwnProperty('feature_revision')) {
                obj['feature_revision'] = ApiClient.convertToType(data['feature_revision'], 'Number');
            }
        }
        return obj;
    }


}


ModelRateLimiter.prototype['name'] = undefined;


ModelRateLimiter.prototype['http_methods'] = undefined;


ModelRateLimiter.prototype['rps_limit'] = undefined;


ModelRateLimiter.prototype['window_size'] = undefined;


ModelRateLimiter.prototype['client_key'] = undefined;


ModelRateLimiter.prototype['penalty_box_duration'] = undefined;


ModelRateLimiter.prototype['action'] = undefined;


ModelRateLimiter.prototype['service_id'] = undefined;


ModelRateLimiter.prototype['version'] = undefined;


ModelRateLimiter.prototype['created_at'] = undefined;


ModelRateLimiter.prototype['deleted_at'] = undefined;


ModelRateLimiter.prototype['updated_at'] = undefined;


ModelRateLimiter.prototype['uri_dictionary_name'] = undefined;


ModelRateLimiter.prototype['response'] = undefined;


ModelRateLimiter.prototype['response_object_name'] = undefined;


ModelRateLimiter.prototype['logger_type'] = undefined;


ModelRateLimiter.prototype['feature_revision'] = undefined;






ModelRateLimiter['HttpMethodsEnum'] = {

    
    "HEAD": "HEAD",

    
    "OPTIONS": "OPTIONS",

    
    "GET": "GET",

    
    "POST": "POST",

    
    "PUT": "PUT",

    
    "PATCH": "PATCH",

    
    "DELETE": "DELETE",

    
    "TRACE": "TRACE"
};



ModelRateLimiter['WindowSizeEnum'] = {

    
    "1": 1,

    
    "10": 10,

    
    "60": 60
};



ModelRateLimiter['ActionEnum'] = {

    
    "response": "response",

    
    "response_object": "response_object",

    
    "log_only": "log_only"
};



ModelRateLimiter['LoggerTypeEnum'] = {

    
    "azureblob": "azureblob",

    
    "bigquery": "bigquery",

    
    "cloudfiles": "cloudfiles",

    
    "datadog": "datadog",

    
    "digitalocean": "digitalocean",

    
    "elasticsearch": "elasticsearch",

    
    "ftp": "ftp",

    
    "gcs": "gcs",

    
    "googleanalytics": "googleanalytics",

    
    "heroku": "heroku",

    
    "honeycomb": "honeycomb",

    
    "http": "http",

    
    "https": "https",

    
    "kafka": "kafka",

    
    "kinesis": "kinesis",

    
    "logentries": "logentries",

    
    "loggly": "loggly",

    
    "logshuttle": "logshuttle",

    
    "newrelic": "newrelic",

    
    "openstack": "openstack",

    
    "papertrail": "papertrail",

    
    "pubsub": "pubsub",

    
    "s3": "s3",

    
    "scalyr": "scalyr",

    
    "sftp": "sftp",

    
    "splunk": "splunk",

    
    "stackdriver": "stackdriver",

    
    "sumologic": "sumologic",

    
    "syslog": "syslog"
};



export default ModelRateLimiter;

