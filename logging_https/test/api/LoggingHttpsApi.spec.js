/**
 * HTTPS
 * Fastly will upload log messages to an HTTPS endpoint in the format specified in the HTTPS object. The HTTPS endpoint requires proof of domain ownership before logs can be received. Learn how to validate your domain in our [HTTPS endpoint documentation](https://docs.fastly.com/en/guides/log-streaming-https).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Https);
  }
}(this, function(expect, Https) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Https.LoggingHttpsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LoggingHttpsApi', function() {
    describe('createLogHttps', function() {
      it('should call createLogHttps successfully', function(done) {
        //uncomment below and update the code to test createLogHttps
        //instance.createLogHttps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLogHttps', function() {
      it('should call deleteLogHttps successfully', function(done) {
        //uncomment below and update the code to test deleteLogHttps
        //instance.deleteLogHttps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLogHttps', function() {
      it('should call getLogHttps successfully', function(done) {
        //uncomment below and update the code to test getLogHttps
        //instance.getLogHttps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLogHttps', function() {
      it('should call listLogHttps successfully', function(done) {
        //uncomment below and update the code to test listLogHttps
        //instance.listLogHttps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateLogHttps', function() {
      it('should call updateLogHttps successfully', function(done) {
        //uncomment below and update the code to test updateLogHttps
        //instance.updateLogHttps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
