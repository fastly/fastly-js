/**
 * Origin insights
 * Origin insights is a real-time JSON-formatted data stream providing visibility into responses delivered from your origin servers to Fastly. The API offers a standardized set of data to report in real-time every origin response, byte, and status code received by a specified service in one-second periods up to the last complete second.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OriginInsights);
  }
}(this, function(expect, OriginInsights) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OriginInsights.ModelMeasurements();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelMeasurements', function() {
    it('should create an instance of ModelMeasurements', function() {
      // uncomment below and update the code to test ModelMeasurements
      //var instane = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be.a(OriginInsights.ModelMeasurements);
    });

    it('should have the property responses (base name: "responses")', function() {
      // uncomment below and update the code to test the property responses
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property respHeaderBytes (base name: "resp_header_bytes")', function() {
      // uncomment below and update the code to test the property respHeaderBytes
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property respBodyBytes (base name: "resp_body_bytes")', function() {
      // uncomment below and update the code to test the property respBodyBytes
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status1xx (base name: "status_1xx")', function() {
      // uncomment below and update the code to test the property status1xx
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status2xx (base name: "status_2xx")', function() {
      // uncomment below and update the code to test the property status2xx
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status3xx (base name: "status_3xx")', function() {
      // uncomment below and update the code to test the property status3xx
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status4xx (base name: "status_4xx")', function() {
      // uncomment below and update the code to test the property status4xx
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status5xx (base name: "status_5xx")', function() {
      // uncomment below and update the code to test the property status5xx
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status200 (base name: "status_200")', function() {
      // uncomment below and update the code to test the property status200
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status204 (base name: "status_204")', function() {
      // uncomment below and update the code to test the property status204
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status301 (base name: "status_301")', function() {
      // uncomment below and update the code to test the property status301
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status302 (base name: "status_302")', function() {
      // uncomment below and update the code to test the property status302
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status304 (base name: "status_304")', function() {
      // uncomment below and update the code to test the property status304
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status400 (base name: "status_400")', function() {
      // uncomment below and update the code to test the property status400
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status401 (base name: "status_401")', function() {
      // uncomment below and update the code to test the property status401
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status403 (base name: "status_403")', function() {
      // uncomment below and update the code to test the property status403
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status404 (base name: "status_404")', function() {
      // uncomment below and update the code to test the property status404
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status416 (base name: "status_416")', function() {
      // uncomment below and update the code to test the property status416
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status500 (base name: "status_500")', function() {
      // uncomment below and update the code to test the property status500
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status501 (base name: "status_501")', function() {
      // uncomment below and update the code to test the property status501
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status502 (base name: "status_502")', function() {
      // uncomment below and update the code to test the property status502
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status503 (base name: "status_503")', function() {
      // uncomment below and update the code to test the property status503
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status504 (base name: "status_504")', function() {
      // uncomment below and update the code to test the property status504
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

    it('should have the property status505 (base name: "status_505")', function() {
      // uncomment below and update the code to test the property status505
      //var instance = new OriginInsights.ModelMeasurements();
      //expect(instance).to.be();
    });

  });

}));
