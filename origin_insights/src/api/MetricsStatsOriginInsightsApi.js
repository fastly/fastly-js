/**
 * Origin insights
 * Origin insights is a real-time JSON-formatted data stream providing visibility into responses delivered from your origin servers to Fastly. The API offers a standardized set of data to report in real-time every origin response, byte, and status code received by a specified service in one-second periods up to the last complete second.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";


export default class MetricsStatsOriginInsightsApi {

    
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    getOriginInsightsLast120SecondsWithHttpInfo(serviceId) {
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling getOriginInsightsLast120Seconds");
      }

      let pathParams = {
        'service_id': serviceId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['session_or_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/channel/{service_id}/ts/h?kind=origin_insights', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    getOriginInsightsLast120Seconds(serviceId) {
      return this.getOriginInsightsLast120SecondsWithHttpInfo(serviceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
    getOriginInsightsLastMaxEntriesWithHttpInfo(serviceId, maxEntries) {
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling getOriginInsightsLastMaxEntries");
      }
      // verify the required parameter 'maxEntries' is set
      if (maxEntries === undefined || maxEntries === null) {
        throw new Error("Missing the required parameter 'maxEntries' when calling getOriginInsightsLastMaxEntries");
      }

      let pathParams = {
        'service_id': serviceId,
        'max_entries': maxEntries
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['session_or_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/channel/{service_id}/ts/h/limit/{max_entries}?kind=origin_insights', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    getOriginInsightsLastMaxEntries(serviceId, maxEntries) {
      return this.getOriginInsightsLastMaxEntriesWithHttpInfo(serviceId, maxEntries)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
    getOriginInsightsLastSecondWithHttpInfo(serviceId, startTimestamp) {
      let postBody = null;
      // verify the required parameter 'serviceId' is set
      if (serviceId === undefined || serviceId === null) {
        throw new Error("Missing the required parameter 'serviceId' when calling getOriginInsightsLastSecond");
      }
      // verify the required parameter 'startTimestamp' is set
      if (startTimestamp === undefined || startTimestamp === null) {
        throw new Error("Missing the required parameter 'startTimestamp' when calling getOriginInsightsLastSecond");
      }

      let pathParams = {
        'service_id': serviceId,
        'start_timestamp': startTimestamp
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['session_or_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/channel/{service_id}/ts/{start_timestamp}?kind=origin_insights', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }
    getOriginInsightsLastSecond(serviceId, startTimestamp) {
      return this.getOriginInsightsLastSecondWithHttpInfo(serviceId, startTimestamp)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
