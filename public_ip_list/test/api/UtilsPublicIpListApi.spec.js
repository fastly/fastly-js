/**
 * Public IP List
 * To help you manage firewall rules for connections from Fastly to your origin, we provide access to the list of Fastly's assigned IP ranges. Changes to this list will be announced in advance as an \"IP address announcement\" ([example](https://status.fastly.com/incidents/b6jbjkqrq0kq)) along with other service announcements to our [status page](https://status.fastly.com/), which you can [subscribe](https://docs.fastly.com/en/guides/fastlys-network-status#subscribing-to-notifications) to.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PublicIpList);
  }
}(this, function(expect, PublicIpList) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PublicIpList.UtilsPublicIpListApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UtilsPublicIpListApi', function() {
    describe('listFastlyIps', function() {
      it('should call listFastlyIps successfully', function(done) {
        //uncomment below and update the code to test listFastlyIps
        //instance.listFastlyIps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
