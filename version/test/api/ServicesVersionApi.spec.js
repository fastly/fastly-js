/**
 * Version
 * A Version represents a specific instance of the configuration for a service. A Version can be cloned, locked, activated, or deactivated.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Version);
  }
}(this, function(expect, Version) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Version.ServicesVersionApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServicesVersionApi', function() {
    describe('activateServiceVersion', function() {
      it('should call activateServiceVersion successfully', function(done) {
        //uncomment below and update the code to test activateServiceVersion
        //instance.activateServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cloneServiceVersion', function() {
      it('should call cloneServiceVersion successfully', function(done) {
        //uncomment below and update the code to test cloneServiceVersion
        //instance.cloneServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createServiceVersion', function() {
      it('should call createServiceVersion successfully', function(done) {
        //uncomment below and update the code to test createServiceVersion
        //instance.createServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deactivateServiceVersion', function() {
      it('should call deactivateServiceVersion successfully', function(done) {
        //uncomment below and update the code to test deactivateServiceVersion
        //instance.deactivateServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceVersion', function() {
      it('should call getServiceVersion successfully', function(done) {
        //uncomment below and update the code to test getServiceVersion
        //instance.getServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServiceVersions', function() {
      it('should call listServiceVersions successfully', function(done) {
        //uncomment below and update the code to test listServiceVersions
        //instance.listServiceVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lockServiceVersion', function() {
      it('should call lockServiceVersion successfully', function(done) {
        //uncomment below and update the code to test lockServiceVersion
        //instance.lockServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServiceVersion', function() {
      it('should call updateServiceVersion successfully', function(done) {
        //uncomment below and update the code to test updateServiceVersion
        //instance.updateServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('validateServiceVersion', function() {
      it('should call validateServiceVersion successfully', function(done) {
        //uncomment below and update the code to test validateServiceVersion
        //instance.validateServiceVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
